.PHONY: build clean run

BUILD_DIR := $(shell mkdir -p build.Emscripten)build.Emscripten
BUILD_DIR_BACKEND := $(shell mkdir -p $(BUILD_DIR)/backend)$(BUILD_DIR)/backend

INC := $(wildcard *.h) $(wildcard ../include/*.h) $(wildcard ../../cpymo/*.h)

SRC_CPYMO := $(wildcard ../../cpymo/*.c)
SRC_BACKEND := $(wildcard *.c) 
OBJS_CPYMO := $(patsubst %.c, $(BUILD_DIR)/%.o, $(notdir $(SRC_CPYMO)))
OBJS_BACKEND := $(patsubst %.c, $(BUILD_DIR_BACKEND)/%.o, $(notdir $(SRC_BACKEND)))

ifeq ($(BUILD_GAME_DIR), )
BUILD_GAME_DIR := # Game dir here, you need put default.ttf to /system/default.ttf.
endif

ifeq ($(WASM), )
WASM := 0
endif

CC := emcc

EM_FLAGS := -s USE_SDL=2 

CFLAGS := \
	-I$(CURDIR)/../include \
	-I$(CURDIR)/../../cpymo \
	-I$(CURDIR)/../../stb \
	-I$(CURDIR)/../../endianness.h \
	-D__EMSCRIPTEN__ \
	-DEMSCRIPTEN_GAMEDIR="\"$(BUILD_GAME_DIR)\"" \
	-DNDEBUG \
	$(EM_FLAGS) \
	-O3

LDFLAGS := \
	$(EM_FLAGS) \
	-lidbfs.js \
	-lSDL2 \
	-s ASYNCIFY \
	-s FORCE_FILESYSTEM=1 \
	-s WASM=$(WASM) \
	-s EXPORTED_RUNTIME_METHODS=['ccall'] \
	-s ALLOW_MEMORY_GROWTH=1

ifeq ($(AUDIO_BACKEND), ffmpeg)

# Use FFmpeg
CFLAGS += -Ibuild.FFmpeg.Emscripten/include -DSDL2_AUDIO_DEFAULT_SAMPLES=16384
LDFLAGS += -Lbuild.FFmpeg.Emscripten/lib -lswscale -lavformat -lavcodec -lavutil -lswresample
	
else

CFLAGS += -DDISABLE_FFMPEG_AUDIO -DDISABLE_MOVIE

ifeq ($(AUDIO_BACKEND), none)

# Disable Audio and Movie
CFLAGS += -DDISABLE_AUDIO

else

# Use SDL2_Mixer by default
CFLAGS += -DENABLE_SDL2_MIXER_AUDIO_BACKEND
LDFLAGS += -lSDL2_mixer
EM_FLAGS += -s SDL2_MIXER_FORMATS=[ogg,mp3,flac,mid,mod,wav] -s USE_SDL_MIXER=2

endif
endif


ifeq ($(BUILD_GAME_DIR), )
ifeq ($(WASM), 0)
	BUILD_SUFFIX := js
else
	BUILD_SUFFIX := wasm
endif
else
	BUILD_SUFFIX := html
endif

build: cpymo.$(BUILD_SUFFIX)

run: build
ifeq ($(BUILD_GAME_DIR), )
		@echo "Nothing to run."
else
		@emrun cpymo.html --no_browser
endif


cpymo.$(BUILD_SUFFIX): $(OBJS_BACKEND) $(OBJS_CPYMO)
	@echo "Linking..."
ifeq ($(BUILD_GAME_DIR), )
	@$(CC) $^ -o $@ $(LDFLAGS)
else
	@$(CC) $^ -o $@ $(LDFLAGS) --preload-file $(strip $(BUILD_GAME_DIR))
endif
	@echo "=> $@"

clean:
	@rm -rf $(BUILD_DIR) cpymo.data cpymo.html cpymo.js cpymo.wasm cpymo.asm.js

define compile
	@echo "$(notdir $1)"
	@$(CC) -c $1 -o $2 $(CFLAGS)
endef

$(BUILD_DIR_BACKEND)/%.o: %.c $(INC)
	$(call compile,$<,$@)

$(BUILD_DIR)/%.o: ../../cpymo/%.c $(INC)
	$(call compile,$<,$@)


